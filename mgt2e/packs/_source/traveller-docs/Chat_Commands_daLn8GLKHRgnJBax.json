{
  "folder": "81lpHPvcOeOkc8gf",
  "name": "Chat Commands",
  "_id": "daLn8GLKHRgnJBax",
  "pages": [
    {
      "sort": 100000,
      "name": "UPP",
      "type": "text",
      "_id": "shQm9JqCDpnbYIo7",
      "title": {
        "show": true,
        "level": 1
      },
      "image": {},
      "text": {
        "format": 1,
        "content": "<pre><code>/upp [&lt;extra-dice&gt;]</code></pre><p></p><p>Generate a set of six characteristics. If extra dice are specified, then extra pairs of dice are rolled, and the highest six pairs will be used to generate the UPP.</p><p></p><p>The results can be dragged to an actor's characteristics to set them.</p><p></p>"
      },
      "video": {
        "controls": true,
        "volume": 0.5
      },
      "src": null,
      "system": {},
      "ownership": {
        "default": -1,
        "Uzw5MJmM0BRE3sSL": 3
      },
      "flags": {},
      "_stats": {
        "systemId": "mgt2e",
        "systemVersion": "0.4.9",
        "coreVersion": "12.331",
        "createdTime": 1717537853687,
        "modifiedTime": 1739898210158,
        "lastModifiedBy": "mhUjqDVicnwIUaiq",
        "compendiumSource": null,
        "duplicateSource": null
      },
      "_key": "!journal.pages!daLn8GLKHRgnJBax.shQm9JqCDpnbYIo7"
    },
    {
      "sort": 100000,
      "name": "Damage",
      "type": "text",
      "_id": "mHFFq1B6Uu3nerxP",
      "system": {},
      "title": {
        "show": true,
        "level": 1
      },
      "image": {},
      "text": {
        "format": 1,
        "content": "<p>/damage &lt;hits&gt; [--noui] [traits…]</p><p></p><p>Do the specified amount of damage to the token.</p><p>If —noui is specified, then characteristic damage will be applied automatically rather than bringing up a dialog.</p><p>Trailing options can be used to set weapon traits, such as stun or AP.</p><p>e.g.</p><p>/damage 23 ap 6 stun</p>"
      },
      "video": {
        "controls": true,
        "volume": 0.5
      },
      "src": null,
      "ownership": {
        "default": -1,
        "mhUjqDVicnwIUaiq": 3
      },
      "flags": {},
      "_stats": {
        "compendiumSource": "JournalEntry.eZ2L0FoGcDGzjNht.JournalEntryPage.mHFFq1B6Uu3nerxP",
        "duplicateSource": null,
        "coreVersion": "12.331",
        "systemId": "mgt2e",
        "systemVersion": "0.11.6.13-DEV",
        "createdTime": 1739898197031,
        "modifiedTime": 1739898197031,
        "lastModifiedBy": "mhUjqDVicnwIUaiq"
      },
      "_key": "!journal.pages!daLn8GLKHRgnJBax.mHFFq1B6Uu3nerxP"
    },
    {
      "sort": 100000,
      "name": "Set Status",
      "type": "text",
      "_id": "0w60QfzgYiHFsLnX",
      "system": {},
      "title": {
        "show": true,
        "level": 1
      },
      "image": {},
      "text": {
        "format": 1,
        "content": "<p>/status &lt;status…&gt;</p><p></p><p>Set a status effect on selected actors. e.g.:</p><pre><code>/status unconscious</code></pre><p>To remove a status, prefix the status name with a minus, e.g.:</p><pre><code>/status -unconscious</code></pre><p>The list of status values that are supported are as follows:</p><ul><li><p>stunned</p></li><li><p>fatigued</p></li><li><p>highGravity</p></li><li><p>lowGravity</p></li><li><p>zeroGravity</p></li><li><p>poisoned</p></li><li><p>diseased</p></li><li><p>unconscious</p></li><li><p>disabled</p></li><li><p>dead</p></li><li><p>destroyed</p></li><li><p>needsFirstAid</p></li><li><p>needsSurgery</p></li><li><p>inCover</p></li><li><p>prone</p></li></ul><p></p>"
      },
      "video": {
        "controls": true,
        "volume": 0.5
      },
      "src": null,
      "ownership": {
        "default": -1,
        "mhUjqDVicnwIUaiq": 3
      },
      "flags": {},
      "_stats": {
        "compendiumSource": "JournalEntry.eZ2L0FoGcDGzjNht.JournalEntryPage.0w60QfzgYiHFsLnX",
        "duplicateSource": null,
        "coreVersion": "12.331",
        "systemId": "mgt2e",
        "systemVersion": "0.11.6.13-DEV",
        "createdTime": 1739898199505,
        "modifiedTime": 1742221108971,
        "lastModifiedBy": "mhUjqDVicnwIUaiq"
      },
      "_key": "!journal.pages!daLn8GLKHRgnJBax.0w60QfzgYiHFsLnX"
    },
    {
      "sort": 100000,
      "name": "Macros",
      "type": "text",
      "_id": "eBUfwBRUB8sJVH8g",
      "system": {},
      "title": {
        "show": true,
        "level": 1
      },
      "image": {},
      "text": {
        "format": 1,
        "content": "<p>A number of macros are provided by default, to make it easier to perform some actions directly from the hotbar.</p><p>These macros can also be embedded in Journal entries if you want.</p><p>All macros use the following structure:</p><p>[[/command &lt;macroName&gt; &lt;arg1=value1&gt; &lt;arg2=value2&gt;]]{Flavour Text}}</p><p></p><p>Note that if a player is setup to have a default player character set, then use of these macros becomes easier. Those which require a token to be selected, will instead automatically use the defined player character for the user if no tokens are selected.</p><p></p><h2>Embedded Macros</h2><p>Embedding a macro into a journal entry can be done using the following command string in a Journal entry:</p><pre><code>[[/mgMacro MacroName ]]{[[/mgMacro MacroName arg1=value1 arg2=value2]]{Flavour Text}}</code></pre><p>If you create a macro called <strong>MacroName</strong> then this command will execute that macro, and pass the given values as arguments. Each argument an be read from the scope variable, so scope.arg1, scope.arg2 et.</p><p>A number of macros are provided by default, to make it easier to perform some actions directly from the hotbar, or just to provide some examples. However, these macros must be manually installed into your world. They are provided as part of the <strong>MgT2e Base Macros</strong> compendium pack, and must be imported to use them.</p><p>The mgMacro command an be used not only in Journals, but also in Actor and Item descriptions.</p><p></p><h3>Create Item Example</h3><p>As an example, here is a macro to create an item, which we've called <strong>CreateItem</strong>. This macro is available in the <strong>MgT2e Base Macros</strong> compendium, and you can import it in from there, or create a new macro from scratch. Call it CreateItem, and it can be used in the following example.</p><pre><code>/**\n * CreateItem Macro\n *\n * To embed this in a Journal, or an Item or Actor description,\n * use the following (without a space between '[[' and the '/'):\n * \n * [[ /mgMacro CreateItem name=\"Glass of Wine\"]]{Take a drink}\n */\nlet itemName = \"New Item\";\nlet itemType = \"item\";\n\nif (scope.name) {\n  itemName = scope.name;\n}\nif (scope.type) {\n  itemType = scope.type;\n}\n\n// Add item to token\nfor (let t of canvas.tokens.controlled) {\n    let actor = t.actor;\n    if (actor) {\n       const itemData = {\n         \"name\": itemName,\n         \"img\": \"\",\n         \"type\": itemType\n       }\n       Item.create(itemData, { parent: actor });\n    }\n}</code></pre><p>This macro reads two optional arguments, name and type. It will then create an item, and add it to the equipment list for each token that is currently selected when the macro is executed.</p><p>Assuming the macro is available, you can try it out here:</p><p>[[/mgMacro CreateItem name=\"Glass of Wine\"]]{Pick up a drink}</p><p>Expanding this to more complicated item types is left as an exercise to the reader.</p><p></p><h2>Internal Macros</h2><p>Internal macros are like embedded macros, but their implementations are hard coded into the core system, so they cannot be changed. This means that they are always available, and perform some more complex actions. However, they are less flexible since they can't be modified without changing core system code.</p><p>Because they are internal though, they don't need to be manually installed before they can be used.</p><p>These use the /mgt2e command.</p><p>Note like other embedded macros, they have the option to be displayed as flavour text with {My Flavour Text} appended to the end of the macro call.</p><h3>Skill Training</h3><p>/mgt2e train skill=pilot.smallCraft level={level} context=&lt;text&gt;</p><p>e.g.:</p><p>[[/mgt2e train skill=pilot.smallCraft level=1 text=\"Service skill\"]]</p><p></p><p>A character token must be selected when this macro is executed, otherwise an error will be given.</p><p>The skill consists of a skill id, plus an optional speciality id.</p><ul><li><p><strong>skill</strong> - The identifier for the skill. This is the lower case skill id, such as 'admin' (not Admin). If you want to specificy a speciality, use the dot notation of parent.speciality, e.g. animal.riding</p></li><li><p><strong>level</strong> - The level to set the skill to. If it is not included, then the skill is increased by one level, up to a maximum of four.</p></li><li><p><strong>text</strong> - Text to be output to the chat when the macro is run.</p></li></ul><p>This macro is for use in character generation.</p><p></p><h4>Training a Characteristic</h4><p>You can also train a characteristic.</p><p>/mgt2e train cha=INT text=\"Personal training\"</p><p>e.g.:</p><p>[[/mgt2e train cha=INT text=\"Personal training\"]]</p><p></p><h4>Adding New Skills</h4><p>It is possible to add a new skill using the skill training macro. This allows Travellers to pick up non-standard skills during training.</p><p>To add a completely new skill, you can set the <strong>name</strong> argument to the macro. This causes the skill to be created if it doesn't exist on the character sheet.</p><p>/mgt2e train skill=warbling name=\"Warbling\" level=0</p><p>[[/mgt2e train skill=warbling name=\"Warbling\" level=0 text=\"Learn the alien Warbling skill\"]]</p><p>To add a speciality to an existing parent skill, you can use the <strong>sname</strong> argument to specificy the name of the specialisation.</p><p>/mgt2e train skill=profession.gardening sname=\"Gardening\" level=1</p><p>e.g.:</p><p>[[/mgt2e train skill=profession.gardening level=1 sname=\"Gardening\"]]</p><p>or with added {flavour text}:</p><p>[[/mgt2e train skill=profession.gardening level=1 sname=\"Gardening\"]]{Learn Gardening}</p><p></p><p>If you need to specify a new parent skill, which has a speciality, then you need to specify the full name of the speciality, along with both <strong>name</strong> and <strong>sname</strong>.</p><p>[[/mgt2e train skill=magic.creo name=\"Magic\" sname=\"Creo\" level=1]]</p><p></p><h3>Skill Check</h3><p>This automatically makes a skill check for all the selected tokens. A dialog will be popped up allowing the skill to be rolled.</p><p>/mgt2e skill skill=admin text=\"Try to bribe the security guard\"</p><p>e.g.:</p><p>[[/mgt2e skillCheck skill=admin text=\"Try to bribe the security guard\"]]</p><p>The full list of arguments:</p><ul><li><p><strong>skill</strong> - The skill to be rolled.</p></li><li><p><strong>cha</strong> - The characteristic to be used. (optional)</p></li><li><p><strong>target</strong> - Target difficulty of the skill check. (optional)</p></li><li><p><strong>text</strong> - Text to display whent the skill is rolled. (optional)</p></li><li><p><strong>success</strong> - Text to display if the skill check is a success. (optional)</p></li><li><p><strong>failure</strong> - Text to display if the skill check is failed. (optional)</p></li><li><p><strong>cost</strong> - Cost to the characteristic when skill succeeds. If greater than zero, then this is reduced to 1 if the skill check fails. This is to simulate PSI point costs.</p></li></ul><p>If you are the GM, and you try to make a skill check when no tokens are selected, then the check will be changed into a request (see below).</p><h4>Agent Checks</h4><p>You can make a pure skill check from a macro without reference to an actor, using the <strong>agent</strong> option.</p><ul><li><p><strong>agent</strong> - Name to display for the agent</p></li><li><p><strong>level</strong> - Skill level for the agent</p></li></ul><p>If the <strong>agent</strong> option is specified, then no attempt is made to use a selected actor. The <strong>cha</strong> and <strong>cost</strong> options are also ignored. Instead, a simple skill check is made at a level of <strong>level</strong>. Since the skill dialog is still popped up, you can add further DMs and set the target difficulty level there.</p><p>[[/mgt2e skill skill=electronics.computers target=6 agent=\"Intelligent Interface\" level=2 text=\"Make a computer check using an intelligent interface\"]]</p><p>This is designed for use with items which can made skill checks themselves (such as Agent software, some medical devices or anything else which doesn't use an actor's skill).</p><p></p><h3>Skill Request</h3><img src=\"systems/mgt2e/images/docs/skill-request.webp\" style=\"float:right\" /><p>Similar to a skill check, but this outputs a message to the chat that requests players make a skill check.</p><p>/mgt2e skillReq skill=admin text=\"Try to bribe the security guard\"</p><p>e.g.:</p><p>[[/mgt2e req skill=admin text=\"Try to bribe the security guard\" failure=\"Failed\"]]</p><p>The list of arguments is the same as for a Skill Check.</p><p>When the macro is executed, a button is output to the chat. If a player clicks the button, then skill checks will be made by any tokens they currently have selected.</p><p>Alternatively, the button can be dragged to a character sheet, and the character will make the roll.</p><p>If a <strong>success</strong> or <strong>failure</strong> message is provided, then this will be automatically output if the roll is a success or failure. If no result messages are provided, then no extra information is provided to the players in the chat.</p><p>The main use for this is to allow skill checks to be inserted into the text of adventures, which can then be used by the GM to make a simple request to players to make a check</p><p>Though the success/failure text isn't normally visible, it is sent to the client browser. So it is possible for an untrustworthy and technically minded player to examine the HTML in their browser console and find out what the success and failure messages are before they make the roll.</p><p></p><h3>Damage</h3><p>The damage macro allows damage to be generated and applied to characters. You can use either 'damage' or 'dmg' as the macro name.</p><p>/mgt2e damage dice=3D6 text=\"An electric shock\"</p><p>e.g.</p><p>[[/mgt2e damage dice=3D6 text=\"An electric shock\"]]</p><p>You can also set the damage type, which can be one of the typical damage types, or:</p><ul><li><p>radiation, to cause only radiation damage.</p></li><li><p>A characteristic, such as INT or STR, in order to cause direct characteristic damage.</p></li></ul><p>e.g.:</p><p>[[/mgt2e dmg type=radiation dice=\"5D6\" text=\"There is a radiation storm\"]]</p><p>or</p><p>[[/mgt2e dmg type=INT dice=1D3 text=\"Take poison damage\"]]</p><p></p><h3>Buying Items</h3><p>It's possible to buy an item from a link on a journal page, using the 'buy' macro.</p><p>/mgt2e buy uuid=&lt;uuid&gt;]]</p><p>e.g.:</p><p>[[/mgt2e buy uuid=Compendium.mgt2e.base-items.Item.k9jB0P60IGcEmeyw]]</p><p>When clicked, this will pop up a dialog confirming the purchase, and also allow the player to select which character they want to buy it for. By default, the currently selected character is chosen. If there is no currently selected character, then the player's default character is chosen.</p><p>When purchased, the price of the item will be removed from the character's cash, and the item will be added to their equipment list.</p><p>You can find the uuid of an item by clicking the 'Copy Document UUID' icon on the top left of an item sheet's title bar.</p><p></p>"
      },
      "video": {
        "controls": true,
        "volume": 0.5
      },
      "src": null,
      "ownership": {
        "default": -1,
        "mhUjqDVicnwIUaiq": 3
      },
      "flags": {},
      "_stats": {
        "compendiumSource": "JournalEntry.eZ2L0FoGcDGzjNht.JournalEntryPage.eBUfwBRUB8sJVH8g",
        "duplicateSource": null,
        "coreVersion": "12.331",
        "systemId": "mgt2e",
        "systemVersion": "0.11.6.13-DEV",
        "createdTime": 1739898202402,
        "modifiedTime": 1753620865958,
        "lastModifiedBy": "XsiBG1ohlPVbUVQC"
      },
      "_key": "!journal.pages!daLn8GLKHRgnJBax.eBUfwBRUB8sJVH8g"
    }
  ],
  "sort": 300000,
  "ownership": {
    "default": 0,
    "Uzw5MJmM0BRE3sSL": 3
  },
  "flags": {
    "core": {
      "sourceId": "JournalEntry.daLn8GLKHRgnJBax"
    }
  },
  "_stats": {
    "systemId": "mgt2e",
    "systemVersion": "0.4.9",
    "coreVersion": "12.329",
    "createdTime": 1717537836176,
    "modifiedTime": 1718230162161,
    "lastModifiedBy": "Uzw5MJmM0BRE3sSL",
    "compendiumSource": "JournalEntry.daLn8GLKHRgnJBax",
    "duplicateSource": null
  },
  "_key": "!journal!daLn8GLKHRgnJBax"
}
